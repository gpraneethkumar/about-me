GIT Training 		29 June 2015   Instructor : Ryan Morris
-----------------------------------------------------------
Configs //Global, system, local
==============================
git config --global user.name "pgunti"		//Add user to your account
git config --global user.email "pgunti@salesforce.com"	//Add email to your account
git config --global --list  //List all the configs or <key> instead of --list


git config --global core.autocrlf false   // True to set the line ending in Windows ( CRLF )to avoid white space versioning 
											 and false for mac/linux ( LF )


git config --global core.editor vi   // "sublime --n --w "  or "atom --wait" instead of vi
											 
____________________________________________________

Repository
===========

git init			// To create a repo
git status			// To display the status of the repo
git log				// Shows the commit ids
git log --graph --oneline --decorate --all

git add <file> 		//To add the files or folders to staging on every change or new before commiting
git commit			//To commit file to add to the repo  -m to add message on the on the cmd line
					  -v 
					  
git diff --staged	//Diff of staged and commited
git diff			//diff of unstaged change

gitk 				//To show in UI

git show <id>		//To show the more log of a commit id

git log --oneline	//Shows oneline of a log

git rm <file>		//Deletes the file or folder and stages on finishing 
git mv <file1> <file2> //Moving file and stage on finishing 
git rm --cached 		//Remove only cache of staging not the changes in file

git reset HEAD <file>	//To unstage the file

git clean -f 	//wipes out all untracked files in directory

git commit --amend		// To change the last commit message like message or adding new files that are staged


git reset HEAD^			//^ - Resets head to the previous position


Branching
===========
git branch <Branchname>			// Create a new branch
git branch						//List all the braches along with master
git checkout <BranchName>		//Checkout and change the head to Branch
git checkout -b <BranchName>	//Create and checkout the new Branch 	

Merge
========
git merge <BranchName>


git branch --merged					//To see all the branches merged
git branch --no-merge				//To see all the non merged branches

git branch -d <branchname>			//To delete branch
git branch -D <BranchName>			//To delete unmerged branch

git mergr --abort					//To abort the merge if there is conflict or not willing
git reflog							//History log

git tag <BranchName> <Optional

git stash
git config --global alias.graph 'log --oneline --decorate --graph --all'

.gitignore



REMOTE
===========
git remote add origin <remote-url>
git push --set-upstream origin master


 		